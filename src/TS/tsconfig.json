{
  "compilerOptions": {
    "target": "es5",
    // "module": "amd",
    // 需要requirejs库的支持

    // "module": "system",
    // 这是什么模块没了解过啊

    "module": "umd",
    // 打包成通用模块 分文件 可以直接在node上跑 当然可以在webpack环境下以es6的语法用 通用模块还是很好的

    // "module": "commonjs",
    // 打包成commonjs 分文件 可以直接在node上跑

    // "module": "es2015",
    // 打包为es6的业务源代码 直接在node上跑不了的 还需要经过babel的处理

    "noImplicitAny": true,
    "removeComments": true,
    // 去除注释
    "preserveConstEnums": true,
    "experimentalDecorators": true,
    "sourceMap": false,
    "outDir": "./build"
    // 输出目录 保留源文件个数

    // "outFile": "./build/build.js",
    // outFile 指定的话 就打包成一个文件 只支持amd和system模式 没指定module 默认是system

    // "types" : ["node"]
  },
  // 通过files具体打包哪几个文件
  // "files": [
    // "test.ts"
    // "core.ts",
    // "sys.ts",
  // ]
  // glob的写法 打包src文件下的所有文件夹
  "include": [
    "src/**/*"
  ],
  "exclude": [
    "node_modules",
    "**/*.spec.ts"
  ]
}
